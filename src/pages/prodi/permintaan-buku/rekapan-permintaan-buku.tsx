import AppTemplate from '@/components/templates/AppTemplate';
import Layout from '@/components/templates/Layout';
import { APP_NAME } from '@/constant';
import { Button } from '@chakra-ui/button';
import { FormLabel } from '@chakra-ui/form-control';
import { Box, Flex, Text } from '@chakra-ui/layout';
import { Select } from '@chakra-ui/select';
import moment from 'moment';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect, useMemo, useState } from 'react';
import { BiArrowBack } from 'react-icons/bi';
import {
  Table,
  Thead,
  Tbody,
  Tfoot,
  Tr,
  Th,
  Td,
  TableCaption,
  TableContainer,
} from '@chakra-ui/react';
import { AiOutlineFilePdf } from 'react-icons/ai';

interface IDataRow {
  id: string;
  no: number;
  judulBuku: string;
  penulis: string;
  penerbit: string;
  tanggalUpload: string;
  tahun: string;
  aksi: string;
}

// interface IReduxStateWorkspace {
//   user?: IUser;
// }

const RekapanPermintaanBukuAdmin: NextPage = () => {
  const router = useRouter();
  const [dataPengguna, setDataPengguna] = useState<IDataRow[]>([
    {
      id: new Date().getTime().toString(),
      no: 1,
      judulBuku: 'Judul buku',
      penulis: 'Penulis',
      penerbit: 'Penerbit',
      tanggalUpload: moment().format('L'),
      tahun: new Date().getFullYear().toString(),
      aksi: new Date().getTime().toString(),
    },
    {
      id: new Date().getTime().toString(),
      no: 2,
      judulBuku: 'Judul buku',
      penulis: 'Penulis',
      penerbit: 'Penerbit',
      tanggalUpload: moment().format('L'),
      tahun: new Date().getFullYear().toString(),
      aksi: new Date().getTime().toString(),
    },
    {
      id: new Date().getTime().toString(),
      no: 3,
      judulBuku: 'Judul buku',
      penulis: 'Penulis',
      penerbit: 'Penerbit',
      tanggalUpload: moment().format('L'),
      tahun: new Date().getFullYear().toString(),
      aksi: new Date().getTime().toString(),
    },
    {
      id: new Date().getTime().toString(),
      no: 4,
      judulBuku: 'Judul buku',
      penulis: 'Penulis',
      penerbit: 'Penerbit',
      tanggalUpload: moment().format('L'),
      tahun: new Date().getFullYear().toString(),
      aksi: new Date().getTime().toString(),
    },
  ]);
  // const { showToast } = useGlobalContext();
  // const { user } = useSelector<ICombinedState, IReduxStateWorkspace>(
  //   (state) => {
  //     return {
  //       user: state.user.user,
  //     };
  //   }
  // );
  const columns = useMemo(
    () => [
      {
        Header: 'No',
        accessor: 'no',
      },
      {
        Header: 'ID',
        accessor: 'id',
      },
      {
        Header: 'Judul Buku',
        accessor: 'judulBuku',
      },
      {
        Header: 'Penulis',
        accessor: 'penulis',
      },
      {
        Header: 'Penerbit',
        accessor: 'penerbit',
      },
      {
        Header: 'Tanggal Upload',
        accessor: 'tanggalUpload',
      },
      {
        Header: 'Tahun',
        accessor: 'tahun',
      },
      {
        Header: 'Aksi',
        accessor: 'aksi',
      },
    ],
    []
  );

  const getListPengguna = async () => {
    // const res = await ApiGetListPenjualAdminProdi({
    //   prodiId: user?.prodi ?? '',
    // });
    // if (res.status === 200) {
    //   let temp: IDataRow[] = [];
    //   for (const data of res.data.data) {
    //     const lapak = await ApiGetLapakByProdiId(data.prodi._id);
    //     temp.push({
    //       id: data._id,
    //       nama: data.fullname,
    //       email: data.email,
    //       prodi: data.prodi.name,
    //       statusAkun: data.isSuspend ?? false,
    //       lapak: lapak?.data?.data?.namaLapak ?? '-',
    //     });
    //   }
    //   setDataPengguna(temp);
    // } else {
    //   showToast({
    //     title: 'Error',
    //     message: res.data.message,
    //     type: 'error',
    //   });
    // }
  };

  const back = () => {
    router.back();
  };

  useEffect(() => {
    getListPengguna();
  }, []);

  return (
    <Layout>
      <Head>
        <title>{APP_NAME} | Admin | Manajemen Katalog</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <AppTemplate>
        <Box p='4'>
          <Button
            colorScheme='green'
            onClick={back}
            my='5'
            leftIcon={<BiArrowBack />}
            size='md'
          >
            Kembali
          </Button>
          <Text fontWeight='700' color='gray.700' fontSize='2xl'>
            Rekapan Permintaan Buku
          </Text>
          <Box my='4'>
            <Flex w='full' justifyContent='flex-start' alignItems='center'>
              <Box>
                <FormLabel>Urutkan</FormLabel>
                <Select>
                  {/* <option value=''>Penerbit A </option>
                  <option value=''>Penerbit B </option>
                  <option value=''>Penerbit C </option>
                  <option value=''>Penerbit D </option> */}
                </Select>
                {/* <InputGroup w='500px' size='md'>
                  <Input placeholder='Cari nama...' />
                  <InputRightElement>
                    <IconButton
                      aria-label='cari'
                      // onClick={handleClick}
                      icon={<Search2Icon />}
                    />
                  </InputRightElement>
                </InputGroup> */}
              </Box>
            </Flex>
            <Box my='4'>
              <Box my='8'>
                <Text
                  textAlign='center'
                  color='black'
                  fontWeight='800'
                  mb='3'
                  size='24px'
                >
                  Teknik Informatika
                </Text>
                <TableContainer>
                  <Table variant='simple'>
                    <Thead>
                      <Tr>
                        <Th>No</Th>
                        <Th>Judul Buku</Th>
                        <Th>Penulis</Th>
                        <Th>Penerbit</Th>
                        <Th>Tahun</Th>
                        <Th>Diajukan Pada</Th>
                      </Tr>
                    </Thead>
                    <Tbody>
                      <Tr>
                        <Td>1</Td>
                        <Td>Judul buku</Td>
                        <Td>Penulis</Td>
                        <Td>Penerbit</Td>
                        <Td>{new Date().getFullYear()}</Td>
                        <Td>{moment().format('L')}</Td>
                      </Tr>
                      <Tr>
                        <Td>2</Td>
                        <Td>Judul buku</Td>
                        <Td>Penulis</Td>
                        <Td>Penerbit</Td>
                        <Td>{new Date().getFullYear()}</Td>
                        <Td>{moment().format('L')}</Td>
                      </Tr>
                      <Tr>
                        <Td>3</Td>
                        <Td>Judul buku</Td>
                        <Td>Penulis</Td>
                        <Td>Penerbit</Td>
                        <Td>{new Date().getFullYear()}</Td>
                        <Td>{moment().format('L')}</Td>
                      </Tr>
                    </Tbody>
                  </Table>
                </TableContainer>
              </Box>
              <Box my='8'>
                <Text
                  textAlign='center'
                  color='black'
                  fontWeight='800'
                  mb='3'
                  size='24px'
                >
                  Teknologi Hasil Perikanan
                </Text>
                <TableContainer>
                  <Table variant='simple'>
                    <Thead>
                      <Tr>
                        <Th>No</Th>
                        <Th>Judul Buku</Th>
                        <Th>Penulis</Th>
                        <Th>Penerbit</Th>
                        <Th>Tahun</Th>
                        <Th>Diajukan Pada</Th>
                      </Tr>
                    </Thead>
                    <Tbody>
                      <Tr>
                        <Td>1</Td>
                        <Td>Judul buku</Td>
                        <Td>Penulis</Td>
                        <Td>Penerbit</Td>
                        <Td>{new Date().getFullYear()}</Td>
                        <Td>{moment().format('L')}</Td>
                      </Tr>
                      <Tr>
                        <Td>2</Td>
                        <Td>Judul buku</Td>
                        <Td>Penulis</Td>
                        <Td>Penerbit</Td>
                        <Td>{new Date().getFullYear()}</Td>
                        <Td>{moment().format('L')}</Td>
                      </Tr>
                      <Tr>
                        <Td>3</Td>
                        <Td>Judul buku</Td>
                        <Td>Penulis</Td>
                        <Td>Penerbit</Td>
                        <Td>{new Date().getFullYear()}</Td>
                        <Td>{moment().format('L')}</Td>
                      </Tr>
                    </Tbody>
                  </Table>
                </TableContainer>
              </Box>
              <Box my='8'>
                <Text
                  textAlign='center'
                  color='black'
                  fontWeight='800'
                  mb='3'
                  size='24px'
                >
                  Peternakan
                </Text>
                <TableContainer>
                  <Table variant='simple'>
                    <Thead>
                      <Tr>
                        <Th>No</Th>
                        <Th>Judul Buku</Th>
                        <Th>Penulis</Th>
                        <Th>Penerbit</Th>
                        <Th>Tahun</Th>
                        <Th>Diajukan Pada</Th>
                      </Tr>
                    </Thead>
                    <Tbody>
                      <Tr>
                        <Td>1</Td>
                        <Td>Judul buku</Td>
                        <Td>Penulis</Td>
                        <Td>Penerbit</Td>
                        <Td>{new Date().getFullYear()}</Td>
                        <Td>{moment().format('L')}</Td>
                      </Tr>
                      <Tr>
                        <Td>2</Td>
                        <Td>Judul buku</Td>
                        <Td>Penulis</Td>
                        <Td>Penerbit</Td>
                        <Td>{new Date().getFullYear()}</Td>
                        <Td>{moment().format('L')}</Td>
                      </Tr>
                      <Tr>
                        <Td>3</Td>
                        <Td>Judul buku</Td>
                        <Td>Penulis</Td>
                        <Td>Penerbit</Td>
                        <Td>{new Date().getFullYear()}</Td>
                        <Td>{moment().format('L')}</Td>
                      </Tr>
                    </Tbody>
                  </Table>
                </TableContainer>
              </Box>
              <Button colorScheme='purple' leftIcon={<AiOutlineFilePdf />}>
                Cetak PDF
              </Button>
            </Box>
          </Box>
        </Box>
      </AppTemplate>
    </Layout>
  );
};

// export default privateRouteAdminProdi(RekapanPermintaanBukuAdmin);
export default RekapanPermintaanBukuAdmin;
